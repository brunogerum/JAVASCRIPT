body{
    font-family: Arial, Helvetica, sans-serif;
    color: #000;
}

.header{
    grid-area: header;
}

.principal{
    grid-area: principal;
}

.lateral{
    grid-area: lateral;
}

.footer{
    grid-area: footer;
}

.container{
    display: grid; /*o in-line grid so usa o tamanho do texto de dentro e o grid transforma em grade*/
    grid-template-columns: auto auto auto auto; /*quantas colunas vai ter  - auto auto-- coloca em 2 colunas, cada mais auto coloca mais colunas ou valor especifico de valores*/
    grid-template-rows: 50px auto 30px;/*como é com relação as linhas*/
    /*grid-column-gap: 10px; espaço entre as colunas*/
    /*grid-row-gap: 10px; espaço para as colunas*/
    grid-gap: 5px 10px;/* primeiro para linha e segundo para as colunas*/

    grid-template-areas: 
    'header header header header'    
    'principal principal . lateral'
    'footer footer footer footer'
    ;

}

.item{
    background-color: #048;
    color: #fff;
    border: 1px solid #000;
    text-align: center;
    /*margin:15px; funciona como o gap, porem é feito no item*/
}

.it1{
    /* grid-column-start: 1;
    grid-column-end: 3;*//* começa no 1 e termina no 3, mas nao ocupa o 3 */
    /* grid-row-start 
    grid-row-end  segue a mesma explicação do column
    */

    grid-column: 1 / span 2 ; /*simplificada de usar o start e end*/
    grid-row: 1 / 2;
}

.area1{ /*junção de todas as propriedades listadas acima. Nessa ordem*/
/* grid-row-start */
/* grid-column-start*/
/*grid-row-end*/
/*grid-column-end*/
grid-area: 1 / 1 / 3 / 3;

}

.area2{ /*junção de todas as propriedades listadas acima. Nessa ordem*/
    /* grid-row-start */
    /* grid-column-start*/
    /*grid-row-end*/
    /*grid-column-end*/
    grid-area: 3 / 2 / 5 / 4;
    
    }